// Generated by BUCKLESCRIPT VERSION 4.0.5, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var Transform = require("../Canvas/Transform.bs.js");

function varied(fn) {
  return /* Behavior */[fn];
}

function $$const(n) {
  return /* Behavior */[(function () {
              return n;
            })];
}

function lift0(x) {
  return /* Behavior */[(function () {
              return x;
            })];
}

function lift1(fn, behA) {
  var x = behA[0];
  return /* Behavior */[(function (t) {
              return Curry._1(fn, Curry._1(x, t));
            })];
}

function lift2(fn, behA, behB) {
  var b = behB[0];
  var a = behA[0];
  return /* Behavior */[(function (t) {
              return Curry._2(fn, Curry._1(a, t), Curry._1(b, t));
            })];
}

var beh5 = /* Behavior */[(function () {
      return 5;
    })];

function moveXYB(param, param$1) {
  return lift2(Transform.moveXY, param, param$1);
}

function saveTB(param) {
  return lift1((function (tr) {
                return /* WrappedTransform */Block.__(4, [tr]);
              }), param);
}

function andThenB(param, param$1) {
  return lift2(Transform.andThen, param, param$1);
}

function getTransform(param) {
  return param[0];
}

var $less$neg$plus$neg$great = andThenB;

exports.varied = varied;
exports.$$const = $$const;
exports.lift0 = lift0;
exports.lift1 = lift1;
exports.lift2 = lift2;
exports.beh5 = beh5;
exports.moveXYB = moveXYB;
exports.saveTB = saveTB;
exports.andThenB = andThenB;
exports.$less$neg$plus$neg$great = $less$neg$plus$neg$great;
exports.getTransform = getTransform;
/* No side effect */
